# Generated by Django 4.0.1 on 2022-03-28 08:06

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('soap_shop', '0001_initial'), ('soap_shop', '0002_product_delete_choice_delete_question'), ('soap_shop', '0003_product_context_product_price'), ('soap_shop', '0004_category_alter_product_title_product_category'), ('soap_shop', '0005_alter_product_category'), ('soap_shop', '0006_alter_product_category'), ('soap_shop', '0007_alter_product_category'), ('soap_shop', '0008_alter_product_category'), ('soap_shop', '0009_alter_product_category'), ('soap_shop', '0010_product_amount_alter_product_category'), ('soap_shop', '0011_product_product_image'), ('soap_shop', '0012_alter_product_price_and_more'), ('soap_shop', '0013_remove_product_soap_shop_price_constraint_and_more'), ('soap_shop', '0014_remove_product_soap_shop_price_gte_0_and_more'), ('soap_shop', '0015_remove_product_soap_shop_price_gte_0_and_more'), ('soap_shop', '0016_remove_product_soap_shop_price_constraint_and_more'), ('soap_shop', '0017_alter_product_price'), ('soap_shop', '0018_alter_product_price'), ('soap_shop', '0019_remove_product_soap_shop_price_constraint_and_more'), ('soap_shop', '0020_category_category_image_alter_product_product_image'), ('soap_shop', '0021_alter_product_product_image'), ('soap_shop', '0022_alter_product_product_image'), ('soap_shop', '0023_product_image_exist_alter_product_product_image'), ('soap_shop', '0024_alter_product_options_alter_product_image_exist'), ('soap_shop', '0025_alter_product_options_remove_product_image_exist_and_more'), ('soap_shop', '0026_alter_productimage_product_image'), ('soap_shop', '0027_product_pub_date_alter_productimage_product_and_more'), ('soap_shop', '0028_alter_product_pub_date'), ('soap_shop', '0029_alter_product_options'), ('soap_shop', '0030_alter_product_options'), ('soap_shop', '0031_category_slug'), ('soap_shop', '0032_category_pub_date')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Категория')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название товара')),
                ('context', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('price', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000.0)], verbose_name='Цена')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product', to='soap_shop.category', verbose_name='Категория')),
                ('amount', models.IntegerField(null=True, verbose_name='Кол-во товаров')),
                ('product_image', models.ImageField(blank=True, null=True, upload_to='soap_shop/')),
            ],
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('price__gte', 0), ('price__lte', 1000)), name='soap_shop_price_constraint'),
        ),
        migrations.RemoveConstraint(
            model_name='product',
            name='soap_shop_price_constraint',
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('price__gte', 0), ('price__lte', 1000)), name='soap_shop_price_gte_0'),
        ),
        migrations.RemoveConstraint(
            model_name='product',
            name='soap_shop_price_gte_0',
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('price__gte', 0)), name='soap_shop_price_gte_0'),
        ),
        migrations.RemoveConstraint(
            model_name='product',
            name='soap_shop_price_gte_0',
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('price__gte', 0)), name='soap_shop_price_constraint'),
        ),
        migrations.RemoveConstraint(
            model_name='product',
            name='soap_shop_price_constraint',
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('price__gte', 0), ('price__lte', 1000)), name='soap_shop_price_constraint'),
        ),
        migrations.AlterField(
            model_name='product',
            name='price',
            field=models.FloatField(blank=True, null=True, verbose_name='Цена'),
        ),
        migrations.AlterField(
            model_name='product',
            name='price',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000.0)], verbose_name='Цена'),
        ),
        migrations.RemoveConstraint(
            model_name='product',
            name='soap_shop_price_constraint',
        ),
        migrations.AlterField(
            model_name='product',
            name='price',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000.0)], verbose_name='Цена'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('price__gte', 0), ('price__lte', 1000000)), name='soap_shop_price_constraint'),
        ),
        migrations.AddField(
            model_name='category',
            name='category_image',
            field=models.ImageField(blank=True, null=True, upload_to='soap_shop/Category_Img'),
        ),
        migrations.AlterField(
            model_name='product',
            name='product_image',
            field=models.ImageField(blank=True, null=True, upload_to='soap_shop/Product_Img'),
        ),
        migrations.AlterField(
            model_name='product',
            name='product_image',
            field=models.ImageField(blank=True, default=None, null=True, upload_to='soap_shop/Product_Img'),
        ),
        migrations.AlterField(
            model_name='product',
            name='product_image',
            field=models.ImageField(blank=True, default='Нет картинки', null=True, upload_to='soap_shop/Product_Img'),
        ),
        migrations.AddField(
            model_name='product',
            name='image_exist',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='product',
            name='product_image',
            field=models.ImageField(blank=True, null=True, upload_to='soap_shop/Product_Img'),
        ),
        migrations.AlterModelOptions(
            name='product',
            options={'ordering': ['image_exist']},
        ),
        migrations.AlterField(
            model_name='product',
            name='image_exist',
            field=models.ImageField(blank=True, null=True, upload_to='static/Elements/cashe'),
        ),
        migrations.AlterModelOptions(
            name='product',
            options={},
        ),
        migrations.RemoveField(
            model_name='product',
            name='image_exist',
        ),
        migrations.RemoveField(
            model_name='product',
            name='product_image',
        ),
        migrations.AddField(
            model_name='product',
            name='pub_date',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_image', models.ImageField(blank=True, null=True, upload_to='soap_shop/Product_Img')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='images', to='soap_shop.product')),
            ],
        ),
        migrations.AlterModelOptions(
            name='product',
            options={},
        ),
        migrations.AddField(
            model_name='category',
            name='slug',
            field=models.SlugField(blank=True, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='category',
            name='pub_date',
            field=models.DateTimeField(auto_now_add=True, db_index=True, null=True),
        ),
    ]
